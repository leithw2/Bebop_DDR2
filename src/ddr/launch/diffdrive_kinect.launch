<launch>


   <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find ddr)/urdf/diffdrive_kinect.urdf.xacro"/>

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
  
<!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include> -->

  <rosparam command="load"
            file="$(find urdf_sim_tutorial)/config/joints.yaml"
            ns="roboto_joint_state_controller" />
  <rosparam command="load"
            file="$(find ddr)/config/diffdrive.yaml"
            ns="roboto_diff_drive_controller" />


  <node name="controller_spawner" pkg="controller_manager" type="spawner"
    args="roboto_joint_state_controller
          roboto_diff_drive_controller"/>

<!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -unpause -urdf -model robot2 -param robot_description" respawn="false" output="screen" />

  <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/roboto_diff_drive_controller/cmd_vel"/>
  </node>

  
  <node pkg="codes" name="DDR_control_4" type="DDR_control_4.py" output="screen" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />  
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="rviz" pkg="rviz" type="rviz" />

<!--
<node pkg="tf" type="static_transform_publisher" name="left_wheel_broadcaster" args=" 0 0 0 0 0 0 odom left_front_wheel 150"/>

  <include file="$(find ddr)/launch/rtabmapodom.launch" />
  <node pkg="codes" name="rrt_star_node_ddr" type="rrt_star_node_ddr.py" output="screen" />
  <node pkg="codes" name="DDR_control_3" type="DDR_control_3.py" output="screen" />
-->

</launch>
